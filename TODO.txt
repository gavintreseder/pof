
# 04 Sep
    
    # Standard Safety factor
    # Asset Loader
        # Load Asset Model (no tests)
        # Load Asset Data
        # Load Fleet Data
    # Calibration
        # Asset details in interface

    # Nice to have
        # Interface improvements
            # Condition
            # Task Schedule
        # Make layout a class
        # Inpsection interval
            # Generalise to sensitivity


    # Replace on failure button

    # Add methods for'max', 'any', 'min', etc

    # figure out how to load a failure mode with kwargs is the init as well

# Illyse Tasks

    # Testing
        # Write a test for different version of expected_risk_cost_df
    # Validation
        # Failure Mode / Condition -> Make tasks check the fm tasks are only triggered by conditions associated with that failure mode

Add Inspection Interval into interface
Add starting condition
Load with pole failure modes


# TODO later
    # move condition from failure mode to component and use pf_interval to create a condition_loss class
    # Sort out the boundary between failure mode and condition

    # connect system impact for failure modes

    # Investigate why the change to condition made everything slower
        # Move condition to component
        # load using condition loss
        # simplify calcs

# Improvements

    # Move to celery and redis
    # Add a method when you don't want to use condition, only failure rates
    # Get 'step' condition working


# Get multiple failure modes working

    # Add functionality to reset failure modes
        # Task -> CM definitely
            # Component -> Which failure_modes reset the component

    # Add safety factor

    # Add method to replace on failure?

# Get example assets working

    # Load a pole asset

    # Load indiciative pole details

# Make the interface prettier

# Sensitivity Analysis

    # Input to change
    # Min
    # Max
    # n_steps

    # Output Graph type / axis

    #Graph
        # Fix axis


# Story

    # Failure rate for whole population
    # Failure modes
    # Failure modes with reset
    # Failure modes with condition



Condition -> object
termites - 3 years
decay - 10 years
weathering = 50 years

ConditionLoss -> Failure Mode


####******************************************

Comp sim_timeline

    sim every timeline

FM sim_timeline

    sim time
    sim state_initiation
    sim indicators
        sim condition loss
            pass pf_interval
        sim symptoms

    sim state_failure
        # sim safety factor
    sim time tasks
    sim condition tasks


Cond sim?





Scenarios
    # Component
        # Failure Mode


    # Component
        # Failure Mode
        # Condition

    # Component
        # Failure Mode
        # Failure Mode
        # Condition
        # Safety Factor



Indicators methods
    # Condition has its own timeline

    # timeline
        condition_ 


Timelines
    # Condition
    # Failure Mode





Indicator -> Overload for each asset class
    
    # check failure
    
    # Condition
        # get condition (all, one)
        # set condition
    # Symptom
        # 



Transformer

    # Check failure
        # Bearing noise (limit)
        # oil reading (limit)

    # Reset condition



# Comp

    # For every Fm

        # initiation
        # condition

    # indicators

    # for every FM:
        # time tasks
        # failure
        # condition



Failure Mode    
    # initiation
    # condition -> indicators
    # time tasks
    # states (detection, failure)
    # condition




# Sim timeline
     
    # initialise timeline

    # Check for next task

    # Execute next task




Condition

    # Get accumulation
        # Add t_acumumlation from each failure mode that affects it

    # Get perfect



    # Get the profile (perfect, failed, pf_interval)

    # Subtract accumulated condition

    # Subtract accumulated time

    # Add free



wall thickness


    starts
        termites 0
        decay 20

    termites    0   0   10  20  30
    decay       20  30  40  50  60


    

# Get_condition_loss_timeline (cause = None)

    if is None:
        add them all up
    else


# Get_condition_timeline


Indicator (conditions) safety factor needs all the conditions

    get_condition_timeline (20, 30, 50  70   90) ---> current condition/loss caused by all failure modes




